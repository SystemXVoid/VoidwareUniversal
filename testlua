if game.PlaceId == 662417684 then

    if not _G.MainLibrary then
    print("error callback working")
    error("Voidware Main loadstring hasn't been loaded. Try running when the main loadstring is loaded")
    end
    
    loadstring(game:HttpGet('https://raw.githubusercontent.com/SystemXVoid/VoidwareUniversal/main/checks/lbvchecks'))()

local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/UI-Interface/CustomFIeld/main/RayField.lua'))()

local Window = Rayfield:CreateWindow({
    Name = "Voidware | Lucky Block Battlegrounds",
    LoadingTitle = "Voidware Universal",
    LoadingSubtitle = "by SystemXVoid",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = Voidware,
       FileName = "662417684"
    },
    Discord = {
       Enabled = false,
       Invite = "sirius", -- The Discord invite code, do not include discord.gg/
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Sirius Hub",
       Subtitle = "Key System",
       Note = "Join the discord (discord.gg/sirius)",
       FileName = "SiriusKey",
       SaveKey = true,
       GrabKeyFromSite = false,
       Key = "Hello"
    }
 })

   local Tab = Window:CreateTab("Lucky", 4483362458)
   
   local Button = Tab:CreateButton({
    Name = "Normal LB",
    Info = "Spawn a Normal Lucky Block.",
    Interact = 'Changable',
    Callback = function()
        game:GetService("ReplicatedStorage").SpawnLuckyBlock:FireServer()
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Super LB",
    Info = "Spawn a Super Lucky Block.",
    Interact = 'Changable',
    Callback = function()
        game:GetService("ReplicatedStorage").SpawnSuperBlock:FireServer()
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Diamond LB",
    Info = "Spawn a Diamond Lucky Block",
    Interact = 'Changable',
    Callback = function()
        game:GetService("ReplicatedStorage").SpawnDiamondBlock:FireServer()
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Rainbow LB",
    Info = "Spawn a Rainbow Lucky Block",
    Interact = 'Changable',
    Callback = function()
        game:GetService("ReplicatedStorage").SpawnRainbowBlock:FireServer()
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Galaxy LB",
    Info = "Spawn a Galaxy Lucky Block (Strongest)",
    Interact = 'Changable',
    Callback = function()
        game:GetService("ReplicatedStorage").SpawnGalaxyBlock:FireServer()
    end,
 })

 local Label = Tab:CreateLabel("Automation")

 local Toggle = Tab:CreateToggle({
    Name = "Get all Items",
    Info = "Fires Lucky Block remotes. looped every 0.3 seconds.",
    CurrentValue = false,
    Flag = "lbloop",
    Callback = function(toggled)
        if toggled then
            _G.ItemExploit2 = true
while _G.ItemExploit2==true do
wait(0.3)
game:GetService("ReplicatedStorage").SpawnGalaxyBlock:FireServer()
					game:GetService("ReplicatedStorage").SpawnLuckyBlock:FireServer()
					game:GetService("ReplicatedStorage").SpawnSuperBlock:FireServer()
					game:GetService("ReplicatedStorage").SpawnDiamondBlock:FireServer()
					game:GetService("ReplicatedStorage").SpawnRainbowBlock:FireServer()
end
else
    _G.ItemExploit2 = false
        end
        end,

    })

    

 local Tab = Window:CreateTab("Teleports", 4483362458)

 local Button = Tab:CreateButton({
    Name = "Middle",
    Info = "Teleports you to the middle",
    Interact = 'Changable',
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1041, 194, 92)

        
    end,
 })

  local Button = Tab:CreateButton({
    Name = "BaseTP",
    Info = "Teleports you to your base",
    Interact = 'Changable',
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-927, 194, -180)

        
    end,
 })


 local Tab = Window:CreateTab("Movement", 4483362458)

 local Slider = Tab:CreateSlider({
    Name = "Speed",
    Info = "Changes your walkspeed",
    Range = {16, 120},
    Increment = 5,
    Suffix = "Local Walkspeed",
    CurrentValue = 16,
    Flag = "speed",
    Callback = function(s)
        _G.HackedWalkSpeed = s
	 
        local Plrs = game:GetService("Players")
         
        local MyPlr = Plrs.LocalPlayer
        local MyChar = MyPlr.Character
         
        if MyChar then
        local Hum = MyChar.Humanoid
        Hum.Changed:connect(function()
        Hum.WalkSpeed = _G.HackedWalkSpeed
        end)
        Hum.WalkSpeed = _G.HackedWalkSpeed
        end
         
         
        MyPlr.CharacterAdded:connect(function(Char)
        MyChar = Char
        repeat wait() until Char:FindFirstChild("Humanoid")
        local Hum = Char.Humanoid
        Hum.Changed:connect(function()
        Hum.WalkSpeed = _G.HackedWalkSpeed
        end)
        Hum.WalkSpeed = _G.HackedWalkSpeed
        end)
    end,
 })

 local Slider = Tab:CreateSlider({
    Name = "Jumpower",
    Info = "Changes your jump height",
    Range = {50, 500},
    Increment = 10,
    Suffix = "Local Jumpheight",
    CurrentValue = 50,
    Flag = "jumpower",
    Callback = function(jpower)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = jpower
    end,
 })

 local Slider = Tab:CreateSlider({
    Name = "Gravity",
    Info = "Changes your workspace gravity",
    Range = {0, 192},
    Increment = 5,
    Suffix = "Workspace Gravity",
    CurrentValue = 192,
    Flag = "gravity",
    Callback = function(Value)
        game.Workspace.Gravity = Value
    end,
 })

local Button = Tab:CreateButton({
   Name = "E to Fly",
   Info = "Toggleable Fly by just pressing E ",
   Interact = 'Changable',
   Callback = function()
        repeat wait() until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("Torso") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
        local mouse = game.Players.LocalPlayer:GetMouse()
        repeat wait() until mouse
          local plr = game.Players.LocalPlayer
          local torso = plr.Character.Torso
          local flying = true
          local deb = true
          local ctrl = {f = 0, b = 0, l = 0, r = 0}
          local lastctrl = {f = 0, b = 0, l = 0, r = 0}
          local maxspeed = 50
          local speed = 0
        
          function Fly()
            local bg = Instance.new("BodyGyro", torso)
            bg.P = 9e4
            bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            bg.cframe = torso.CFrame
            local bv = Instance.new("BodyVelocity", torso)
            bv.velocity = Vector3.new(0,0.1,0)
            bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
            repeat wait()
              if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
                speed = speed+.5+(speed/maxspeed)
                if speed > maxspeed then
                  speed = maxspeed
                end
              elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
                speed = speed-1
                if speed < 0 then
                  speed = 0
                end
              end
              if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
                lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
              elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
              else
                bv.velocity = Vector3.new(0,0.1,0)
              end
              bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
            until not flying
            ctrl = {f = 0, b = 0, l = 0, r = 0}
            lastctrl = {f = 0, b = 0, l = 0, r = 0}
            speed = 0
            bg:Destroy()
            bv:Destroy()
          end
          mouse.KeyDown:connect(function(key)
          if key:lower() == "e" then
            if flying then flying = false
          else
            flying = true
            Fly()
          end
        elseif key:lower() == "w" then
          ctrl.f = 1
        elseif key:lower() == "s" then
          ctrl.b = -1
        elseif key:lower() == "a" then
          ctrl.l = -1
        elseif key:lower() == "d" then
          ctrl.r = 1
        end
        end)
        mouse.KeyUp:connect(function(key)
        if key:lower() == "w" then
          ctrl.f = 0
        elseif key:lower() == "s" then
          ctrl.b = 0
        elseif key:lower() == "a" then
          ctrl.l = 0
        elseif key:lower() == "d" then
          ctrl.r = 0
        end
        end)
        Fly()
    end,
 })
 
 local Toggle = Tab:CreateToggle({
    Name = "FlyJump",
    Info = "Like Infinite Jump, but better. Hold to fly", -- Speaks for itself, Remove if none.
    CurrentValue = false,
    Flag = "flyjump", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        
        
        
        local infjump = true
        game:GetService("UserInputService").JumpRequest:connect(function()
           if infjump then
               game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
           end
        end)
    end,
 })

 local Tab = Window:CreateTab("Utility", 4483362458)

 local Button = Tab:CreateButton({
    Name = "Rejoin",
    Info = "Rejoins the same server.",
    Interact = 'Changable',
    Callback = function()
        Rayfield:Notify({
            Title = "Voidware",
            Content = "Rejoining the server..",
            Duration = 6.5,
            Image = 4483362458,
            Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Dismiss",
                    Callback = function()
                    end
                },
            },
        })

        wait(1)

        local tpservice= game:GetService("TeleportService")
			local plr = game.Players.LocalPlayer
			
			tpservice:Teleport(game.PlaceId, plr)
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Serverhop",
    Info = "Teleports you to another server",
    Interact = 'Changable',
    Callback = function()
        Rayfield:Notify({
            Title = "Voidware",
            Content = "Trying to locate a server..",
            Duration = 6.5,
            Image = 4483362458,
            Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Dismiss",
                    Callback = function()
                    end
                },
            },
        })

        wait(5.1)

        Rayfield:Notify({
            Title = "Voidware",
            Content = "Server Found! Joining..",
            Duration = 6.5,
            Image = 4483362458,
            Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Dismiss",
                    Callback = function()
                    end
                },
            },
        })
        
        local PlaceID = game.PlaceId
        local AllIDs = {}
        local foundAnything = ""
        local actualHour = os.date("!*t").hour
        local Deleted = false
        local File = pcall(function()
            AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
        end)
        if not File then
            table.insert(AllIDs, actualHour)
            writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
        end
        function TPReturner()
            local Site;
            if foundAnything == "" then
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
            else
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
            end
            local ID = ""
            if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
                foundAnything = Site.nextPageCursor
            end
            local num = 0;
            for i,v in pairs(Site.data) do
                local Possible = true
                ID = tostring(v.id)
                if tonumber(v.maxPlayers) > tonumber(v.playing) then
                    for _,Existing in pairs(AllIDs) do
                        if num ~= 0 then
                            if ID == tostring(Existing) then
                                Possible = false
                            end
                        else
                            if tonumber(actualHour) ~= tonumber(Existing) then
                                local delFile = pcall(function()
                                    delfile("NotSameServers.json")
                                    AllIDs = {}
                                    table.insert(AllIDs, actualHour)
                                end)
                            end
                        end
                        num = num + 1
                    end
                    if Possible == true then
                        table.insert(AllIDs, ID)
                        wait()
                        pcall(function()
                            writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                            wait()
                            game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                        end)
                        wait(4)
                    end
                end
            end
        end
        
        function Teleport()
            while wait() do
                pcall(function()
                    TPReturner()
                    if foundAnything ~= "" then
                        TPReturner()
                    end
                end)
            end
        end
        
        Teleport()
    end,
 })

 local Toggle = Tab:CreateToggle({
    Name = "Anti-AFK",
    Info = "Stops you from getting kicked after being Idle for 20 mins",
    CurrentValue = false,
    Flag = "antiafk",
    Callback = function(Value)
        local vu = game:GetService("VirtualUser")
        game:GetService("Players").LocalPlayer.Idled:connect(function()
        vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        wait(1)
        vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        end)

       
    end,
 })

 local Toggle = Tab:CreateToggle({
    Name = "Anti-Kick",
    Info = "Stops Local/Client sided scripts from kicking you.", -- Speaks for itself, Remove if none.
    CurrentValue = false,
    Flag = "antikick", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
       

        local mt = getrawmetatable(game)
local old = mt.__namecall
local protect = newcclosure or protect_function

if not protect then
protect = function(f) return f end
end

setreadonly(mt, false)
mt.__namecall = protect(function(self, ...)
local method = getnamecallmethod()
if method == "Kick" then
wait(9e9)
return
end
return old(self, ...)
end)
hookfunction(game:GetService("Players").LocalPlayer.Kick,protect(function() wait(9e9) end))
end})

 local Section = Tab:CreateSection("Recommended",false)

 local Button = Tab:CreateButton({
    Name = "Infinite Yield",
    Info = "by Edge. This script is recommended for Movement and combat.", -- Speaks for itself, Remove if none.
    Interact = 'Changable',
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source", true))()

        Rayfield:Notify({
            Title = "Voidware",
            Content = "Executed Infinite Yield, by Edge.",
            Duration = 3,
            Image = 4483362458,
            Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Dismiss",
                    Callback = function()
                    end
                },
            },
        })
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Dark Dex",
    Info = "by Moon,This is recommended for Advanced users & Devs ", -- Speaks for itself, Remove if none.
    Interact = 'Changable',
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/BypassedDarkDexV3.lua", true))()

        Rayfield:Notify({
            Title = "Voidware",
            Content = "Executed Dark Dex, by Moon.",
            Duration = 3,
            Image = 4483362458,
            Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Dismiss",
                    Callback = function()
                    end
                },
            },
        })
    end,
 })

 
local Tab = Window:CreateTab("Visuals", 4483362458)

local Toggle = Tab:CreateToggle({
    Name = "Chames",
    Info = "Highlights players allowing you to see them through walls", -- Speaks for itself, Remove if none.
    CurrentValue = false,
    Flag = "chames", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        local players = game:GetService("Players")
        local player = players.LocalPlayer
        local char = player.Character
        local waittime = 0.1
        
        function esp()
        local p = players:GetChildren()
        for i,v in pairs(player.PlayerGui:GetChildren()) do
        if v:IsA('Folder') and (game:GetService('Players'):FindFirstChild(v.Name) or v:FindFirstChildOfClass("BoxHandleAdornment")) then
        v:Destroy()
        end
        end
        for i,v in pairs(p) do
        if workspace:FindFirstChild(v.Name) and (v.Character:FindFirstChild('Head')) then
        if v ~= player then
        local folder = Instance.new('Folder',player.PlayerGui)
        folder.Name = v.Name
        behind(v.Character)
        for _,part in pairs(v.Character:GetChildren()) do
        if part:IsA('BasePart') then
        local adorn = Instance.new('BoxHandleAdornment',folder)
        adorn.Name = v.Name
        if part.Name ~= "Head" then
        adorn.Size = part.Size
        else
        adorn.Size = (part.Size)-Vector3.new(part.Size.X/2,0,0)
        end
        adorn.Adornee = part
        adorn.AlwaysOnTop = true
        adorn.ZIndex = 5
        adorn.Transparency = 0.2
        local c = behind(v.Character)
        adorn.Color3 = c
        local adorn2 = Instance.new('BoxHandleAdornment',folder)
        adorn2.Name = v.Name Color3.fromRGB(255, 44, 17)
        if part.Name ~= "Head" then
        adorn2.Size = part.Size*1.1
        else
        adorn2.Size = (part.Size*1.1)-Vector3.new(part.Size.X/2,0,0)
        end
        end
        end
        end
        end
        end
        end
        
        
        function behind(character)
        local ignore = {character["Left Arm"],character["Right Arm"],character["Right Leg"],character["Left Leg"],character["Torso"],character["HumanoidRootPart"],char["HumanoidRootPart"],char["Left Arm"],char["Right Arm"],char["Right Leg"],char["Left Leg"],char["Torso"]}
        local raycast = Ray.new(char.Head.CFrame.p, (character.Head.CFrame.p - char.Head.CFrame.p).unit*1000)
        local part, pos = workspace:FindPartOnRayWithIgnoreList(raycast,ignore,false,true)
        local debris = math.floor((char.Head.CFrame.p - pos).magnitude*100)/100
        local endp = math.floor((char.Head.CFrame.p - character.Head.CFrame.p).magnitude*100)/100
        if endp - debris >= 2 then
        return Color3.fromRGB(255,44,17)
        elseif endp - debris < 2 then
        return Color3.fromRGB(255,44,17)
        end
        end
        
        while wait(waittime) do
        if player.Character then
        esp()
        end
        end
    end,
 })

 local Tab = Window:CreateTab("Other Games", 4483362458)

 local Button = Tab:CreateButton({
    Name = "Naval Warfare",
    Info = "Teleport to the supported game: Naval  (2210085102)", -- Speaks for itself, Remove if none.
    Interact = 'Changable',
    Callback = function()
        Rayfield:Notify({
            Title = "Voidware",
            Content = "Locating a server...",
            Duration = 5,
            Image = 4483362458,
            Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Dismiss",
                    Callback = function()
                        print("Locating server for: 2210085102")
                    end
                },
            },
        })

        wait(2.5)

        Rayfield:Notify({
            Title = "Voidware",
            Content = "Server Found! Joining",
            Duration = 5,
            Image = 4483362458,
            Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Dismiss",
                    Callback = function()
                        print("Teleporting to game: 2210085102")
                    end
                },
            },
        })

        wait(1)

        game:GetService("TeleportService"):Teleport(2210085102, LocalPlayer)
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Slap Battles",
    Info = "Teleports you to the supported game: Slap Battles (6403373529)", -- Speaks for itself, Remove if none.
    Interact = 'Changable',
    Callback = function()
        Rayfield:Notify({
            Title = "Voidware",
            Content = "Locating a server...",
            Duration = 5,
            Image = 4483362458,
            Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Dismiss",
                    Callback = function()
                        print("Locating server for: 2210085102")
                    end
                },
            },
        })

        wait(2.5)

        Rayfield:Notify({
            Title = "Voidware",
            Content = "Server Found! Joining",
            Duration = 5,
            Image = 4483362458,
            Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Dismiss",
                    Callback = function()
                        print("Teleporting to game: 2210085102")
                    end
                },
            },
        })

        wait(1)

        game:GetService("TeleportService"):Teleport(6403373529, LocalPlayer)
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Tower of Hell",
    Info = "Teleports you to the Supported game: Tower of Hell (1962086868)", -- Speaks for itself, Remove if none.
    Interact = 'Changable',
    Callback = function()
        Rayfield:Notify({
            Title = "Voidware",
            Content = "Locating a server...",
            Duration = 5,
            Image = 4483362458,
            Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Dismiss",
                    Callback = function()
                        print("Locating server for: 2210085102")
                    end
                },
            },
        })

        wait(2.5)

        Rayfield:Notify({
            Title = "Voidware",
            Content = "Server Found! Joining",
            Duration = 5,
            Image = 4483362458,
            Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Dismiss",
                    Callback = function()
                        print("Teleporting to game: 2210085102")
                    end
                },
            },
        })

        wait(1)

        game:GetService("TeleportService"):Teleport(1962086868, LocalPlayer)
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Legends of Speed",
    Info = "Teleports you to the Supported game: Legends of Speed (3101667897)", -- Speaks for itself, Remove if none.
    Interact = 'Changable',
    Callback = function()
        Rayfield:Notify({
            Title = "Voidware",
            Content = "Locating a server...",
            Duration = 5,
            Image = 4483362458,
            Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Dismiss",
                    Callback = function()
                        print("Locating server for: 2210085102")
                    end
                },
            },
        })

        wait(2.5)

        Rayfield:Notify({
            Title = "Voidware",
            Content = "Server Found! Joining",
            Duration = 5,
            Image = 4483362458,
            Actions = { -- Notification Buttons
                Ignore = {
                    Name = "Dismiss",
                    Callback = function()
                        print("Teleporting to game: 2210085102")
                    end
                },
            },
        })

        wait(1)

        game:GetService("TeleportService"):Teleport(3101667897, LocalPlayer)
    end,
 })

 local Tab = Window:CreateTab("Settings", 4483362458)

 local Section = Tab:CreateSection("UI Library",false)

 local Button = Tab:CreateButton({
    Name = "Uninject",
    Info = "Uninjects the script COMPLETELY. Modules might require Rejoining to disable", -- Speaks for itself, Remove if none.
    Interact = 'Changable',
    Callback = function()
        Rayfield:Destroy()

        game.StarterGui:SetCore("SendNotification", {
            Title = "Voidware";
            Text = "Successfully uninjected Voidware Universal. Some modules may require rejoining to disable  ";
            Duration = "300";
        })

        _G.HackedWalkSpeed = 16
	 
	local Plrs = game:GetService("Players")
	 
	local MyPlr = Plrs.LocalPlayer
	local MyChar = MyPlr.Character
	 
	if MyChar then
	local Hum = MyChar.Humanoid
	Hum.Changed:connect(function()
	Hum.WalkSpeed = _G.HackedWalkSpeed
	end)
	Hum.WalkSpeed = _G.HackedWalkSpeed
	end
	 
	 
	MyPlr.CharacterAdded:connect(function(Char)
	MyChar = Char
	repeat wait() until Char:FindFirstChild("Humanoid")
	local Hum = Char.Humanoid
	Hum.Changed:connect(function()
	Hum.WalkSpeed = _G.HackedWalkSpeed
	end)
	Hum.WalkSpeed = _G.HackedWalkSpeed
	end)

	game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
	game.Workspace.Gravity = 192
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Load Orion Version",
    Info = "Loads Voidware, but the UI looks like Orion (by Sirius)", -- Speaks for itself, Remove if none.
    Interact = 'Changable',
    Callback = function()
        Rayfield:Destroy()
        
        wait(2)

        game.StarterGui:SetCore("SendNotification", {
            Title = "Voidware";
            Text = "Loading the Orion Version..";
            Duration = "200";
        })

        loadstring(game:HttpGet(('https://raw.githubusercontent.com/SystemXVoid/VoidwareUniversal/main/luckyblock')))()
    end,
 })

 local Section = Tab:CreateSection("Configuration",false) -- The 2nd argument is to tell if its only a Title and doesnt contain elements

 local Paragraph = Tab:CreateParagraph({Title = "Config File", Content = "/Rayfield/Configurations/662417684.rfld"})

 local Section = Tab:CreateSection("Information",false)

 local Paragraph = Tab:CreateParagraph({Title = "Current Game", Content = "Lucky Blocks Battlegrounds"})
 local Paragraph = Tab:CreateParagraph({Title = "Script Version", Content = "1.3"})
 local Paragraph = Tab:CreateParagraph({Title = "Modules Version", Content = "LB 1.3 BETA"})

 if syn then
    local Paragraph = Tab:CreateParagraph({Title = "Executor", Content = "Synaspe X"})
 end

    if KRNL_LOADED then
        local Paragraph = Tab:CreateParagraph({Title = "Executor", Content = "Krnl"}) 
    end
 

 local Tab = Window:CreateTab("Credits", 4483362458)

 local Paragraph = Tab:CreateParagraph({Title = "Script Creator", Content = "SystemXVoid#7813"})
 local Paragraph = Tab:CreateParagraph({Title = "UI Library", Content = "ArrayField (by iRay#1488 & Metas) (Original by Sirius) "})
 local Paragraph = Tab:CreateParagraph({Title = "Extra Credits", Content = "Some Scripts are used from Other sites like (WeAreDevs.net & V3rmillion.net)"})
 local Paragraph = Tab:CreateParagraph({Title = "Key System Designer", Content = "DaiPlayz#6750"})
 
 local Section = Tab:CreateSection("Creator Links",false)

 local Button = Tab:CreateButton({
    Name = "Discord",
    Info = "The Voidware Discord by SystemXVoid", -- Speaks for itself, Remove if none.
    Interact = 'Changable',
    Callback = function()
    setclipboard("https://discord.com/invite/Zpz3QX9MVG")

    Rayfield:Notify({
        Title = "Voidware",
        Content = "Sent the Discord invite to your clipboard",
        Duration = 3,
        Image = 4483362458,
        Actions = { -- Notification Buttons
            Ignore = {
                Name = "Dismiss",
                Callback = function()
                end
            },
        },
    })
    end,
 })

 Rayfield:LoadConfiguration()
end
